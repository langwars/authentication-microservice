/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 253.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 4.0], [8.5, 4.0], [8.6, 4.0], [8.7, 4.0], [8.8, 4.0], [8.9, 4.0], [9.0, 4.0], [9.1, 4.0], [9.2, 4.0], [9.3, 4.0], [9.4, 4.0], [9.5, 4.0], [9.6, 4.0], [9.7, 4.0], [9.8, 4.0], [9.9, 4.0], [10.0, 4.0], [10.1, 4.0], [10.2, 4.0], [10.3, 5.0], [10.4, 5.0], [10.5, 5.0], [10.6, 5.0], [10.7, 5.0], [10.8, 5.0], [10.9, 5.0], [11.0, 5.0], [11.1, 5.0], [11.2, 5.0], [11.3, 5.0], [11.4, 5.0], [11.5, 5.0], [11.6, 5.0], [11.7, 5.0], [11.8, 5.0], [11.9, 5.0], [12.0, 6.0], [12.1, 6.0], [12.2, 6.0], [12.3, 6.0], [12.4, 6.0], [12.5, 6.0], [12.6, 6.0], [12.7, 6.0], [12.8, 6.0], [12.9, 6.0], [13.0, 6.0], [13.1, 6.0], [13.2, 6.0], [13.3, 6.0], [13.4, 6.0], [13.5, 6.0], [13.6, 6.0], [13.7, 6.0], [13.8, 7.0], [13.9, 7.0], [14.0, 7.0], [14.1, 7.0], [14.2, 7.0], [14.3, 7.0], [14.4, 7.0], [14.5, 7.0], [14.6, 7.0], [14.7, 7.0], [14.8, 7.0], [14.9, 7.0], [15.0, 7.0], [15.1, 7.0], [15.2, 7.0], [15.3, 7.0], [15.4, 7.0], [15.5, 8.0], [15.6, 8.0], [15.7, 8.0], [15.8, 8.0], [15.9, 8.0], [16.0, 8.0], [16.1, 8.0], [16.2, 8.0], [16.3, 8.0], [16.4, 8.0], [16.5, 8.0], [16.6, 8.0], [16.7, 8.0], [16.8, 8.0], [16.9, 8.0], [17.0, 8.0], [17.1, 8.0], [17.2, 8.0], [17.3, 9.0], [17.4, 9.0], [17.5, 9.0], [17.6, 9.0], [17.7, 9.0], [17.8, 9.0], [17.9, 9.0], [18.0, 9.0], [18.1, 9.0], [18.2, 9.0], [18.3, 9.0], [18.4, 9.0], [18.5, 9.0], [18.6, 9.0], [18.7, 9.0], [18.8, 9.0], [18.9, 10.0], [19.0, 10.0], [19.1, 10.0], [19.2, 10.0], [19.3, 10.0], [19.4, 10.0], [19.5, 10.0], [19.6, 10.0], [19.7, 10.0], [19.8, 10.0], [19.9, 10.0], [20.0, 10.0], [20.1, 10.0], [20.2, 10.0], [20.3, 10.0], [20.4, 10.0], [20.5, 11.0], [20.6, 11.0], [20.7, 11.0], [20.8, 11.0], [20.9, 11.0], [21.0, 11.0], [21.1, 11.0], [21.2, 11.0], [21.3, 11.0], [21.4, 11.0], [21.5, 11.0], [21.6, 11.0], [21.7, 11.0], [21.8, 11.0], [21.9, 11.0], [22.0, 12.0], [22.1, 12.0], [22.2, 12.0], [22.3, 12.0], [22.4, 12.0], [22.5, 12.0], [22.6, 12.0], [22.7, 12.0], [22.8, 12.0], [22.9, 12.0], [23.0, 12.0], [23.1, 12.0], [23.2, 12.0], [23.3, 12.0], [23.4, 12.0], [23.5, 13.0], [23.6, 13.0], [23.7, 13.0], [23.8, 13.0], [23.9, 13.0], [24.0, 13.0], [24.1, 13.0], [24.2, 13.0], [24.3, 13.0], [24.4, 13.0], [24.5, 13.0], [24.6, 13.0], [24.7, 13.0], [24.8, 13.0], [24.9, 14.0], [25.0, 14.0], [25.1, 14.0], [25.2, 14.0], [25.3, 14.0], [25.4, 14.0], [25.5, 14.0], [25.6, 14.0], [25.7, 14.0], [25.8, 14.0], [25.9, 14.0], [26.0, 14.0], [26.1, 14.0], [26.2, 14.0], [26.3, 15.0], [26.4, 15.0], [26.5, 15.0], [26.6, 15.0], [26.7, 15.0], [26.8, 15.0], [26.9, 15.0], [27.0, 15.0], [27.1, 15.0], [27.2, 15.0], [27.3, 15.0], [27.4, 15.0], [27.5, 15.0], [27.6, 15.0], [27.7, 15.0], [27.8, 16.0], [27.9, 16.0], [28.0, 16.0], [28.1, 16.0], [28.2, 16.0], [28.3, 16.0], [28.4, 16.0], [28.5, 16.0], [28.6, 16.0], [28.7, 16.0], [28.8, 16.0], [28.9, 16.0], [29.0, 16.0], [29.1, 17.0], [29.2, 17.0], [29.3, 17.0], [29.4, 17.0], [29.5, 17.0], [29.6, 17.0], [29.7, 17.0], [29.8, 17.0], [29.9, 17.0], [30.0, 17.0], [30.1, 17.0], [30.2, 17.0], [30.3, 17.0], [30.4, 17.0], [30.5, 18.0], [30.6, 18.0], [30.7, 18.0], [30.8, 18.0], [30.9, 18.0], [31.0, 18.0], [31.1, 18.0], [31.2, 18.0], [31.3, 18.0], [31.4, 18.0], [31.5, 18.0], [31.6, 18.0], [31.7, 19.0], [31.8, 19.0], [31.9, 19.0], [32.0, 19.0], [32.1, 19.0], [32.2, 19.0], [32.3, 19.0], [32.4, 19.0], [32.5, 19.0], [32.6, 19.0], [32.7, 19.0], [32.8, 19.0], [32.9, 19.0], [33.0, 19.0], [33.1, 20.0], [33.2, 20.0], [33.3, 20.0], [33.4, 20.0], [33.5, 20.0], [33.6, 20.0], [33.7, 20.0], [33.8, 20.0], [33.9, 20.0], [34.0, 20.0], [34.1, 20.0], [34.2, 20.0], [34.3, 20.0], [34.4, 21.0], [34.5, 21.0], [34.6, 21.0], [34.7, 21.0], [34.8, 21.0], [34.9, 21.0], [35.0, 21.0], [35.1, 21.0], [35.2, 21.0], [35.3, 21.0], [35.4, 21.0], [35.5, 21.0], [35.6, 22.0], [35.7, 22.0], [35.8, 22.0], [35.9, 22.0], [36.0, 22.0], [36.1, 22.0], [36.2, 22.0], [36.3, 22.0], [36.4, 22.0], [36.5, 22.0], [36.6, 22.0], [36.7, 22.0], [36.8, 23.0], [36.9, 23.0], [37.0, 23.0], [37.1, 23.0], [37.2, 23.0], [37.3, 23.0], [37.4, 23.0], [37.5, 23.0], [37.6, 23.0], [37.7, 23.0], [37.8, 23.0], [37.9, 23.0], [38.0, 23.0], [38.1, 24.0], [38.2, 24.0], [38.3, 24.0], [38.4, 24.0], [38.5, 24.0], [38.6, 24.0], [38.7, 24.0], [38.8, 24.0], [38.9, 24.0], [39.0, 24.0], [39.1, 24.0], [39.2, 24.0], [39.3, 24.0], [39.4, 25.0], [39.5, 25.0], [39.6, 25.0], [39.7, 25.0], [39.8, 25.0], [39.9, 25.0], [40.0, 25.0], [40.1, 25.0], [40.2, 25.0], [40.3, 25.0], [40.4, 25.0], [40.5, 25.0], [40.6, 26.0], [40.7, 26.0], [40.8, 26.0], [40.9, 26.0], [41.0, 26.0], [41.1, 26.0], [41.2, 26.0], [41.3, 26.0], [41.4, 26.0], [41.5, 26.0], [41.6, 26.0], [41.7, 26.0], [41.8, 26.0], [41.9, 27.0], [42.0, 27.0], [42.1, 27.0], [42.2, 27.0], [42.3, 27.0], [42.4, 27.0], [42.5, 27.0], [42.6, 27.0], [42.7, 27.0], [42.8, 27.0], [42.9, 27.0], [43.0, 27.0], [43.1, 28.0], [43.2, 28.0], [43.3, 28.0], [43.4, 28.0], [43.5, 28.0], [43.6, 28.0], [43.7, 28.0], [43.8, 28.0], [43.9, 28.0], [44.0, 28.0], [44.1, 28.0], [44.2, 28.0], [44.3, 28.0], [44.4, 29.0], [44.5, 29.0], [44.6, 29.0], [44.7, 29.0], [44.8, 29.0], [44.9, 29.0], [45.0, 29.0], [45.1, 29.0], [45.2, 29.0], [45.3, 29.0], [45.4, 29.0], [45.5, 29.0], [45.6, 30.0], [45.7, 30.0], [45.8, 30.0], [45.9, 30.0], [46.0, 30.0], [46.1, 30.0], [46.2, 30.0], [46.3, 30.0], [46.4, 30.0], [46.5, 30.0], [46.6, 30.0], [46.7, 30.0], [46.8, 31.0], [46.9, 31.0], [47.0, 31.0], [47.1, 31.0], [47.2, 31.0], [47.3, 31.0], [47.4, 31.0], [47.5, 31.0], [47.6, 31.0], [47.7, 31.0], [47.8, 31.0], [47.9, 32.0], [48.0, 32.0], [48.1, 32.0], [48.2, 32.0], [48.3, 32.0], [48.4, 32.0], [48.5, 32.0], [48.6, 32.0], [48.7, 32.0], [48.8, 32.0], [48.9, 32.0], [49.0, 32.0], [49.1, 32.0], [49.2, 32.0], [49.3, 33.0], [49.4, 33.0], [49.5, 33.0], [49.6, 33.0], [49.7, 33.0], [49.8, 33.0], [49.9, 33.0], [50.0, 33.0], [50.1, 33.0], [50.2, 33.0], [50.3, 33.0], [50.4, 33.0], [50.5, 33.0], [50.6, 34.0], [50.7, 34.0], [50.8, 34.0], [50.9, 34.0], [51.0, 34.0], [51.1, 34.0], [51.2, 34.0], [51.3, 34.0], [51.4, 34.0], [51.5, 34.0], [51.6, 34.0], [51.7, 35.0], [51.8, 35.0], [51.9, 35.0], [52.0, 35.0], [52.1, 35.0], [52.2, 35.0], [52.3, 35.0], [52.4, 35.0], [52.5, 35.0], [52.6, 35.0], [52.7, 35.0], [52.8, 35.0], [52.9, 36.0], [53.0, 36.0], [53.1, 36.0], [53.2, 36.0], [53.3, 36.0], [53.4, 36.0], [53.5, 36.0], [53.6, 36.0], [53.7, 36.0], [53.8, 36.0], [53.9, 37.0], [54.0, 37.0], [54.1, 37.0], [54.2, 37.0], [54.3, 37.0], [54.4, 37.0], [54.5, 37.0], [54.6, 37.0], [54.7, 37.0], [54.8, 37.0], [54.9, 38.0], [55.0, 38.0], [55.1, 38.0], [55.2, 38.0], [55.3, 38.0], [55.4, 38.0], [55.5, 38.0], [55.6, 38.0], [55.7, 38.0], [55.8, 38.0], [55.9, 39.0], [56.0, 39.0], [56.1, 39.0], [56.2, 39.0], [56.3, 39.0], [56.4, 39.0], [56.5, 39.0], [56.6, 39.0], [56.7, 39.0], [56.8, 40.0], [56.9, 40.0], [57.0, 40.0], [57.1, 40.0], [57.2, 40.0], [57.3, 40.0], [57.4, 40.0], [57.5, 40.0], [57.6, 40.0], [57.7, 40.0], [57.8, 41.0], [57.9, 41.0], [58.0, 41.0], [58.1, 41.0], [58.2, 41.0], [58.3, 41.0], [58.4, 41.0], [58.5, 41.0], [58.6, 42.0], [58.7, 42.0], [58.8, 42.0], [58.9, 42.0], [59.0, 42.0], [59.1, 42.0], [59.2, 42.0], [59.3, 42.0], [59.4, 42.0], [59.5, 43.0], [59.6, 43.0], [59.7, 43.0], [59.8, 43.0], [59.9, 43.0], [60.0, 43.0], [60.1, 43.0], [60.2, 44.0], [60.3, 44.0], [60.4, 44.0], [60.5, 44.0], [60.6, 44.0], [60.7, 44.0], [60.8, 44.0], [60.9, 44.0], [61.0, 44.0], [61.1, 45.0], [61.2, 45.0], [61.3, 45.0], [61.4, 45.0], [61.5, 45.0], [61.6, 45.0], [61.7, 45.0], [61.8, 46.0], [61.9, 46.0], [62.0, 46.0], [62.1, 46.0], [62.2, 46.0], [62.3, 46.0], [62.4, 46.0], [62.5, 47.0], [62.6, 47.0], [62.7, 47.0], [62.8, 47.0], [62.9, 47.0], [63.0, 47.0], [63.1, 48.0], [63.2, 48.0], [63.3, 48.0], [63.4, 48.0], [63.5, 48.0], [63.6, 48.0], [63.7, 49.0], [63.8, 49.0], [63.9, 49.0], [64.0, 49.0], [64.1, 49.0], [64.2, 49.0], [64.3, 50.0], [64.4, 50.0], [64.5, 50.0], [64.6, 50.0], [64.7, 50.0], [64.8, 50.0], [64.9, 51.0], [65.0, 51.0], [65.1, 51.0], [65.2, 51.0], [65.3, 51.0], [65.4, 51.0], [65.5, 52.0], [65.6, 52.0], [65.7, 52.0], [65.8, 52.0], [65.9, 52.0], [66.0, 52.0], [66.1, 53.0], [66.2, 53.0], [66.3, 53.0], [66.4, 53.0], [66.5, 53.0], [66.6, 54.0], [66.7, 54.0], [66.8, 54.0], [66.9, 54.0], [67.0, 54.0], [67.1, 55.0], [67.2, 55.0], [67.3, 55.0], [67.4, 55.0], [67.5, 55.0], [67.6, 56.0], [67.7, 56.0], [67.8, 56.0], [67.9, 56.0], [68.0, 56.0], [68.1, 56.0], [68.2, 57.0], [68.3, 57.0], [68.4, 57.0], [68.5, 57.0], [68.6, 57.0], [68.7, 58.0], [68.8, 58.0], [68.9, 58.0], [69.0, 58.0], [69.1, 59.0], [69.2, 59.0], [69.3, 59.0], [69.4, 59.0], [69.5, 59.0], [69.6, 60.0], [69.7, 60.0], [69.8, 60.0], [69.9, 60.0], [70.0, 60.0], [70.1, 61.0], [70.2, 61.0], [70.3, 61.0], [70.4, 61.0], [70.5, 62.0], [70.6, 62.0], [70.7, 62.0], [70.8, 62.0], [70.9, 62.0], [71.0, 63.0], [71.1, 63.0], [71.2, 63.0], [71.3, 63.0], [71.4, 64.0], [71.5, 64.0], [71.6, 64.0], [71.7, 64.0], [71.8, 65.0], [71.9, 65.0], [72.0, 65.0], [72.1, 65.0], [72.2, 66.0], [72.3, 66.0], [72.4, 66.0], [72.5, 66.0], [72.6, 67.0], [72.7, 67.0], [72.8, 67.0], [72.9, 67.0], [73.0, 68.0], [73.1, 68.0], [73.2, 68.0], [73.3, 68.0], [73.4, 69.0], [73.5, 69.0], [73.6, 69.0], [73.7, 69.0], [73.8, 70.0], [73.9, 70.0], [74.0, 70.0], [74.1, 70.0], [74.2, 71.0], [74.3, 71.0], [74.4, 71.0], [74.5, 71.0], [74.6, 72.0], [74.7, 72.0], [74.8, 72.0], [74.9, 72.0], [75.0, 73.0], [75.1, 73.0], [75.2, 73.0], [75.3, 74.0], [75.4, 74.0], [75.5, 74.0], [75.6, 75.0], [75.7, 75.0], [75.8, 75.0], [75.9, 75.0], [76.0, 76.0], [76.1, 76.0], [76.2, 76.0], [76.3, 77.0], [76.4, 77.0], [76.5, 77.0], [76.6, 77.0], [76.7, 78.0], [76.8, 78.0], [76.9, 78.0], [77.0, 79.0], [77.1, 79.0], [77.2, 79.0], [77.3, 79.0], [77.4, 80.0], [77.5, 80.0], [77.6, 80.0], [77.7, 81.0], [77.8, 81.0], [77.9, 81.0], [78.0, 82.0], [78.1, 82.0], [78.2, 82.0], [78.3, 82.0], [78.4, 83.0], [78.5, 83.0], [78.6, 83.0], [78.7, 84.0], [78.8, 84.0], [78.9, 84.0], [79.0, 85.0], [79.1, 85.0], [79.2, 85.0], [79.3, 86.0], [79.4, 86.0], [79.5, 86.0], [79.6, 87.0], [79.7, 87.0], [79.8, 87.0], [79.9, 88.0], [80.0, 88.0], [80.1, 89.0], [80.2, 89.0], [80.3, 89.0], [80.4, 90.0], [80.5, 90.0], [80.6, 91.0], [80.7, 91.0], [80.8, 91.0], [80.9, 92.0], [81.0, 92.0], [81.1, 92.0], [81.2, 93.0], [81.3, 93.0], [81.4, 94.0], [81.5, 94.0], [81.6, 94.0], [81.7, 95.0], [81.8, 95.0], [81.9, 96.0], [82.0, 96.0], [82.1, 96.0], [82.2, 96.0], [82.3, 97.0], [82.4, 97.0], [82.5, 98.0], [82.6, 98.0], [82.7, 98.0], [82.8, 99.0], [82.9, 99.0], [83.0, 99.0], [83.1, 100.0], [83.2, 100.0], [83.3, 100.0], [83.4, 101.0], [83.5, 101.0], [83.6, 102.0], [83.7, 102.0], [83.8, 102.0], [83.9, 103.0], [84.0, 103.0], [84.1, 103.0], [84.2, 104.0], [84.3, 104.0], [84.4, 105.0], [84.5, 105.0], [84.6, 105.0], [84.7, 106.0], [84.8, 106.0], [84.9, 106.0], [85.0, 107.0], [85.1, 107.0], [85.2, 108.0], [85.3, 108.0], [85.4, 108.0], [85.5, 109.0], [85.6, 109.0], [85.7, 110.0], [85.8, 110.0], [85.9, 110.0], [86.0, 111.0], [86.1, 111.0], [86.2, 111.0], [86.3, 112.0], [86.4, 112.0], [86.5, 112.0], [86.6, 113.0], [86.7, 113.0], [86.8, 114.0], [86.9, 114.0], [87.0, 115.0], [87.1, 115.0], [87.2, 115.0], [87.3, 116.0], [87.4, 116.0], [87.5, 116.0], [87.6, 116.0], [87.7, 117.0], [87.8, 117.0], [87.9, 117.0], [88.0, 118.0], [88.1, 118.0], [88.2, 119.0], [88.3, 119.0], [88.4, 119.0], [88.5, 120.0], [88.6, 120.0], [88.7, 120.0], [88.8, 120.0], [88.9, 121.0], [89.0, 121.0], [89.1, 121.0], [89.2, 122.0], [89.3, 122.0], [89.4, 122.0], [89.5, 122.0], [89.6, 123.0], [89.7, 123.0], [89.8, 123.0], [89.9, 123.0], [90.0, 124.0], [90.1, 124.0], [90.2, 124.0], [90.3, 125.0], [90.4, 125.0], [90.5, 125.0], [90.6, 125.0], [90.7, 126.0], [90.8, 126.0], [90.9, 126.0], [91.0, 126.0], [91.1, 127.0], [91.2, 127.0], [91.3, 127.0], [91.4, 127.0], [91.5, 128.0], [91.6, 128.0], [91.7, 128.0], [91.8, 129.0], [91.9, 129.0], [92.0, 129.0], [92.1, 129.0], [92.2, 130.0], [92.3, 130.0], [92.4, 131.0], [92.5, 131.0], [92.6, 131.0], [92.7, 132.0], [92.8, 132.0], [92.9, 132.0], [93.0, 133.0], [93.1, 133.0], [93.2, 133.0], [93.3, 134.0], [93.4, 134.0], [93.5, 134.0], [93.6, 135.0], [93.7, 135.0], [93.8, 136.0], [93.9, 136.0], [94.0, 136.0], [94.1, 137.0], [94.2, 137.0], [94.3, 137.0], [94.4, 138.0], [94.5, 138.0], [94.6, 139.0], [94.7, 139.0], [94.8, 139.0], [94.9, 140.0], [95.0, 140.0], [95.1, 141.0], [95.2, 141.0], [95.3, 142.0], [95.4, 142.0], [95.5, 143.0], [95.6, 143.0], [95.7, 143.0], [95.8, 144.0], [95.9, 144.0], [96.0, 145.0], [96.1, 145.0], [96.2, 146.0], [96.3, 146.0], [96.4, 147.0], [96.5, 147.0], [96.6, 147.0], [96.7, 148.0], [96.8, 148.0], [96.9, 149.0], [97.0, 150.0], [97.1, 150.0], [97.2, 151.0], [97.3, 151.0], [97.4, 152.0], [97.5, 153.0], [97.6, 153.0], [97.7, 154.0], [97.8, 155.0], [97.9, 155.0], [98.0, 156.0], [98.1, 157.0], [98.2, 158.0], [98.3, 159.0], [98.4, 160.0], [98.5, 160.0], [98.6, 161.0], [98.7, 163.0], [98.8, 164.0], [98.9, 165.0], [99.0, 167.0], [99.1, 170.0], [99.2, 173.0], [99.3, 175.0], [99.4, 180.0], [99.5, 184.0], [99.6, 195.0], [99.7, 204.0], [99.8, 210.0], [99.9, 216.0], [100.0, 253.0]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 4.0], [8.3, 4.0], [8.4, 4.0], [8.5, 4.0], [8.6, 4.0], [8.7, 4.0], [8.8, 4.0], [8.9, 4.0], [9.0, 4.0], [9.1, 4.0], [9.2, 4.0], [9.3, 4.0], [9.4, 4.0], [9.5, 4.0], [9.6, 4.0], [9.7, 4.0], [9.8, 4.0], [9.9, 5.0], [10.0, 5.0], [10.1, 5.0], [10.2, 5.0], [10.3, 5.0], [10.4, 5.0], [10.5, 5.0], [10.6, 5.0], [10.7, 5.0], [10.8, 5.0], [10.9, 5.0], [11.0, 5.0], [11.1, 5.0], [11.2, 5.0], [11.3, 5.0], [11.4, 5.0], [11.5, 5.0], [11.6, 6.0], [11.7, 6.0], [11.8, 6.0], [11.9, 6.0], [12.0, 6.0], [12.1, 6.0], [12.2, 6.0], [12.3, 6.0], [12.4, 6.0], [12.5, 6.0], [12.6, 6.0], [12.7, 6.0], [12.8, 6.0], [12.9, 6.0], [13.0, 6.0], [13.1, 6.0], [13.2, 6.0], [13.3, 7.0], [13.4, 7.0], [13.5, 7.0], [13.6, 7.0], [13.7, 7.0], [13.8, 7.0], [13.9, 7.0], [14.0, 7.0], [14.1, 7.0], [14.2, 7.0], [14.3, 7.0], [14.4, 7.0], [14.5, 7.0], [14.6, 7.0], [14.7, 7.0], [14.8, 7.0], [14.9, 8.0], [15.0, 8.0], [15.1, 8.0], [15.2, 8.0], [15.3, 8.0], [15.4, 8.0], [15.5, 8.0], [15.6, 8.0], [15.7, 8.0], [15.8, 8.0], [15.9, 8.0], [16.0, 8.0], [16.1, 8.0], [16.2, 8.0], [16.3, 8.0], [16.4, 8.0], [16.5, 8.0], [16.6, 9.0], [16.7, 9.0], [16.8, 9.0], [16.9, 9.0], [17.0, 9.0], [17.1, 9.0], [17.2, 9.0], [17.3, 9.0], [17.4, 9.0], [17.5, 9.0], [17.6, 9.0], [17.7, 9.0], [17.8, 9.0], [17.9, 9.0], [18.0, 9.0], [18.1, 9.0], [18.2, 9.0], [18.3, 10.0], [18.4, 10.0], [18.5, 10.0], [18.6, 10.0], [18.7, 10.0], [18.8, 10.0], [18.9, 10.0], [19.0, 10.0], [19.1, 10.0], [19.2, 10.0], [19.3, 10.0], [19.4, 10.0], [19.5, 10.0], [19.6, 10.0], [19.7, 10.0], [19.8, 11.0], [19.9, 11.0], [20.0, 11.0], [20.1, 11.0], [20.2, 11.0], [20.3, 11.0], [20.4, 11.0], [20.5, 11.0], [20.6, 11.0], [20.7, 11.0], [20.8, 11.0], [20.9, 11.0], [21.0, 11.0], [21.1, 11.0], [21.2, 11.0], [21.3, 11.0], [21.4, 12.0], [21.5, 12.0], [21.6, 12.0], [21.7, 12.0], [21.8, 12.0], [21.9, 12.0], [22.0, 12.0], [22.1, 12.0], [22.2, 12.0], [22.3, 12.0], [22.4, 12.0], [22.5, 12.0], [22.6, 12.0], [22.7, 12.0], [22.8, 13.0], [22.9, 13.0], [23.0, 13.0], [23.1, 13.0], [23.2, 13.0], [23.3, 13.0], [23.4, 13.0], [23.5, 13.0], [23.6, 13.0], [23.7, 13.0], [23.8, 13.0], [23.9, 13.0], [24.0, 13.0], [24.1, 14.0], [24.2, 14.0], [24.3, 14.0], [24.4, 14.0], [24.5, 14.0], [24.6, 14.0], [24.7, 14.0], [24.8, 14.0], [24.9, 14.0], [25.0, 14.0], [25.1, 14.0], [25.2, 14.0], [25.3, 14.0], [25.4, 15.0], [25.5, 15.0], [25.6, 15.0], [25.7, 15.0], [25.8, 15.0], [25.9, 15.0], [26.0, 15.0], [26.1, 15.0], [26.2, 15.0], [26.3, 15.0], [26.4, 15.0], [26.5, 15.0], [26.6, 15.0], [26.7, 15.0], [26.8, 16.0], [26.9, 16.0], [27.0, 16.0], [27.1, 16.0], [27.2, 16.0], [27.3, 16.0], [27.4, 16.0], [27.5, 16.0], [27.6, 16.0], [27.7, 16.0], [27.8, 16.0], [27.9, 16.0], [28.0, 16.0], [28.1, 17.0], [28.2, 17.0], [28.3, 17.0], [28.4, 17.0], [28.5, 17.0], [28.6, 17.0], [28.7, 17.0], [28.8, 17.0], [28.9, 17.0], [29.0, 17.0], [29.1, 17.0], [29.2, 17.0], [29.3, 17.0], [29.4, 18.0], [29.5, 18.0], [29.6, 18.0], [29.7, 18.0], [29.8, 18.0], [29.9, 18.0], [30.0, 18.0], [30.1, 18.0], [30.2, 18.0], [30.3, 18.0], [30.4, 18.0], [30.5, 18.0], [30.6, 18.0], [30.7, 19.0], [30.8, 19.0], [30.9, 19.0], [31.0, 19.0], [31.1, 19.0], [31.2, 19.0], [31.3, 19.0], [31.4, 19.0], [31.5, 19.0], [31.6, 19.0], [31.7, 19.0], [31.8, 19.0], [31.9, 19.0], [32.0, 20.0], [32.1, 20.0], [32.2, 20.0], [32.3, 20.0], [32.4, 20.0], [32.5, 20.0], [32.6, 20.0], [32.7, 20.0], [32.8, 20.0], [32.9, 20.0], [33.0, 20.0], [33.1, 20.0], [33.2, 21.0], [33.3, 21.0], [33.4, 21.0], [33.5, 21.0], [33.6, 21.0], [33.7, 21.0], [33.8, 21.0], [33.9, 21.0], [34.0, 21.0], [34.1, 21.0], [34.2, 21.0], [34.3, 21.0], [34.4, 21.0], [34.5, 22.0], [34.6, 22.0], [34.7, 22.0], [34.8, 22.0], [34.9, 22.0], [35.0, 22.0], [35.1, 22.0], [35.2, 22.0], [35.3, 22.0], [35.4, 22.0], [35.5, 22.0], [35.6, 22.0], [35.7, 23.0], [35.8, 23.0], [35.9, 23.0], [36.0, 23.0], [36.1, 23.0], [36.2, 23.0], [36.3, 23.0], [36.4, 23.0], [36.5, 23.0], [36.6, 23.0], [36.7, 23.0], [36.8, 23.0], [36.9, 24.0], [37.0, 24.0], [37.1, 24.0], [37.2, 24.0], [37.3, 24.0], [37.4, 24.0], [37.5, 24.0], [37.6, 24.0], [37.7, 24.0], [37.8, 24.0], [37.9, 24.0], [38.0, 24.0], [38.1, 25.0], [38.2, 25.0], [38.3, 25.0], [38.4, 25.0], [38.5, 25.0], [38.6, 25.0], [38.7, 25.0], [38.8, 25.0], [38.9, 25.0], [39.0, 25.0], [39.1, 25.0], [39.2, 25.0], [39.3, 25.0], [39.4, 26.0], [39.5, 26.0], [39.6, 26.0], [39.7, 26.0], [39.8, 26.0], [39.9, 26.0], [40.0, 26.0], [40.1, 26.0], [40.2, 26.0], [40.3, 26.0], [40.4, 26.0], [40.5, 26.0], [40.6, 26.0], [40.7, 27.0], [40.8, 27.0], [40.9, 27.0], [41.0, 27.0], [41.1, 27.0], [41.2, 27.0], [41.3, 27.0], [41.4, 27.0], [41.5, 27.0], [41.6, 27.0], [41.7, 27.0], [41.8, 27.0], [41.9, 28.0], [42.0, 28.0], [42.1, 28.0], [42.2, 28.0], [42.3, 28.0], [42.4, 28.0], [42.5, 28.0], [42.6, 28.0], [42.7, 28.0], [42.8, 28.0], [42.9, 28.0], [43.0, 28.0], [43.1, 28.0], [43.2, 29.0], [43.3, 29.0], [43.4, 29.0], [43.5, 29.0], [43.6, 29.0], [43.7, 29.0], [43.8, 29.0], [43.9, 29.0], [44.0, 29.0], [44.1, 29.0], [44.2, 29.0], [44.3, 29.0], [44.4, 29.0], [44.5, 30.0], [44.6, 30.0], [44.7, 30.0], [44.8, 30.0], [44.9, 30.0], [45.0, 30.0], [45.1, 30.0], [45.2, 30.0], [45.3, 30.0], [45.4, 30.0], [45.5, 30.0], [45.6, 30.0], [45.7, 31.0], [45.8, 31.0], [45.9, 31.0], [46.0, 31.0], [46.1, 31.0], [46.2, 31.0], [46.3, 31.0], [46.4, 31.0], [46.5, 31.0], [46.6, 31.0], [46.7, 31.0], [46.8, 31.0], [46.9, 32.0], [47.0, 32.0], [47.1, 32.0], [47.2, 32.0], [47.3, 32.0], [47.4, 32.0], [47.5, 32.0], [47.6, 32.0], [47.7, 32.0], [47.8, 32.0], [47.9, 32.0], [48.0, 32.0], [48.1, 32.0], [48.2, 33.0], [48.3, 33.0], [48.4, 33.0], [48.5, 33.0], [48.6, 33.0], [48.7, 33.0], [48.8, 33.0], [48.9, 33.0], [49.0, 33.0], [49.1, 33.0], [49.2, 33.0], [49.3, 33.0], [49.4, 34.0], [49.5, 34.0], [49.6, 34.0], [49.7, 34.0], [49.8, 34.0], [49.9, 34.0], [50.0, 34.0], [50.1, 34.0], [50.2, 34.0], [50.3, 34.0], [50.4, 34.0], [50.5, 35.0], [50.6, 35.0], [50.7, 35.0], [50.8, 35.0], [50.9, 35.0], [51.0, 35.0], [51.1, 35.0], [51.2, 35.0], [51.3, 35.0], [51.4, 35.0], [51.5, 35.0], [51.6, 36.0], [51.7, 36.0], [51.8, 36.0], [51.9, 36.0], [52.0, 36.0], [52.1, 36.0], [52.2, 36.0], [52.3, 36.0], [52.4, 36.0], [52.5, 36.0], [52.6, 36.0], [52.7, 36.0], [52.8, 37.0], [52.9, 37.0], [53.0, 37.0], [53.1, 37.0], [53.2, 37.0], [53.3, 37.0], [53.4, 37.0], [53.5, 37.0], [53.6, 37.0], [53.7, 37.0], [53.8, 37.0], [53.9, 38.0], [54.0, 38.0], [54.1, 38.0], [54.2, 38.0], [54.3, 38.0], [54.4, 38.0], [54.5, 38.0], [54.6, 38.0], [54.7, 38.0], [54.8, 38.0], [54.9, 39.0], [55.0, 39.0], [55.1, 39.0], [55.2, 39.0], [55.3, 39.0], [55.4, 39.0], [55.5, 39.0], [55.6, 39.0], [55.7, 39.0], [55.8, 40.0], [55.9, 40.0], [56.0, 40.0], [56.1, 40.0], [56.2, 40.0], [56.3, 40.0], [56.4, 40.0], [56.5, 40.0], [56.6, 40.0], [56.7, 40.0], [56.8, 41.0], [56.9, 41.0], [57.0, 41.0], [57.1, 41.0], [57.2, 41.0], [57.3, 41.0], [57.4, 41.0], [57.5, 41.0], [57.6, 41.0], [57.7, 42.0], [57.8, 42.0], [57.9, 42.0], [58.0, 42.0], [58.1, 42.0], [58.2, 42.0], [58.3, 42.0], [58.4, 42.0], [58.5, 42.0], [58.6, 43.0], [58.7, 43.0], [58.8, 43.0], [58.9, 43.0], [59.0, 43.0], [59.1, 43.0], [59.2, 43.0], [59.3, 43.0], [59.4, 43.0], [59.5, 44.0], [59.6, 44.0], [59.7, 44.0], [59.8, 44.0], [59.9, 44.0], [60.0, 44.0], [60.1, 44.0], [60.2, 44.0], [60.3, 45.0], [60.4, 45.0], [60.5, 45.0], [60.6, 45.0], [60.7, 45.0], [60.8, 45.0], [60.9, 45.0], [61.0, 45.0], [61.1, 46.0], [61.2, 46.0], [61.3, 46.0], [61.4, 46.0], [61.5, 46.0], [61.6, 46.0], [61.7, 46.0], [61.8, 47.0], [61.9, 47.0], [62.0, 47.0], [62.1, 47.0], [62.2, 47.0], [62.3, 47.0], [62.4, 47.0], [62.5, 48.0], [62.6, 48.0], [62.7, 48.0], [62.8, 48.0], [62.9, 48.0], [63.0, 48.0], [63.1, 49.0], [63.2, 49.0], [63.3, 49.0], [63.4, 49.0], [63.5, 49.0], [63.6, 49.0], [63.7, 50.0], [63.8, 50.0], [63.9, 50.0], [64.0, 50.0], [64.1, 50.0], [64.2, 50.0], [64.3, 51.0], [64.4, 51.0], [64.5, 51.0], [64.6, 51.0], [64.7, 51.0], [64.8, 51.0], [64.9, 52.0], [65.0, 52.0], [65.1, 52.0], [65.2, 52.0], [65.3, 52.0], [65.4, 52.0], [65.5, 53.0], [65.6, 53.0], [65.7, 53.0], [65.8, 53.0], [65.9, 53.0], [66.0, 53.0], [66.1, 54.0], [66.2, 54.0], [66.3, 54.0], [66.4, 54.0], [66.5, 54.0], [66.6, 55.0], [66.7, 55.0], [66.8, 55.0], [66.9, 55.0], [67.0, 56.0], [67.1, 56.0], [67.2, 56.0], [67.3, 56.0], [67.4, 56.0], [67.5, 56.0], [67.6, 57.0], [67.7, 57.0], [67.8, 57.0], [67.9, 57.0], [68.0, 57.0], [68.1, 58.0], [68.2, 58.0], [68.3, 58.0], [68.4, 58.0], [68.5, 58.0], [68.6, 59.0], [68.7, 59.0], [68.8, 59.0], [68.9, 59.0], [69.0, 60.0], [69.1, 60.0], [69.2, 60.0], [69.3, 60.0], [69.4, 60.0], [69.5, 61.0], [69.6, 61.0], [69.7, 61.0], [69.8, 61.0], [69.9, 61.0], [70.0, 62.0], [70.1, 62.0], [70.2, 62.0], [70.3, 62.0], [70.4, 63.0], [70.5, 63.0], [70.6, 63.0], [70.7, 63.0], [70.8, 64.0], [70.9, 64.0], [71.0, 64.0], [71.1, 64.0], [71.2, 65.0], [71.3, 65.0], [71.4, 65.0], [71.5, 65.0], [71.6, 66.0], [71.7, 66.0], [71.8, 66.0], [71.9, 66.0], [72.0, 66.0], [72.1, 67.0], [72.2, 67.0], [72.3, 67.0], [72.4, 67.0], [72.5, 68.0], [72.6, 68.0], [72.7, 68.0], [72.8, 69.0], [72.9, 69.0], [73.0, 69.0], [73.1, 69.0], [73.2, 69.0], [73.3, 70.0], [73.4, 70.0], [73.5, 70.0], [73.6, 71.0], [73.7, 71.0], [73.8, 71.0], [73.9, 71.0], [74.0, 72.0], [74.1, 72.0], [74.2, 72.0], [74.3, 72.0], [74.4, 73.0], [74.5, 73.0], [74.6, 73.0], [74.7, 73.0], [74.8, 74.0], [74.9, 74.0], [75.0, 74.0], [75.1, 74.0], [75.2, 75.0], [75.3, 75.0], [75.4, 75.0], [75.5, 75.0], [75.6, 76.0], [75.7, 76.0], [75.8, 76.0], [75.9, 76.0], [76.0, 77.0], [76.1, 77.0], [76.2, 77.0], [76.3, 77.0], [76.4, 78.0], [76.5, 78.0], [76.6, 78.0], [76.7, 78.0], [76.8, 79.0], [76.9, 79.0], [77.0, 79.0], [77.1, 79.0], [77.2, 80.0], [77.3, 80.0], [77.4, 80.0], [77.5, 80.0], [77.6, 81.0], [77.7, 81.0], [77.8, 81.0], [77.9, 82.0], [78.0, 82.0], [78.1, 82.0], [78.2, 83.0], [78.3, 83.0], [78.4, 83.0], [78.5, 84.0], [78.6, 84.0], [78.7, 84.0], [78.8, 84.0], [78.9, 85.0], [79.0, 85.0], [79.1, 85.0], [79.2, 86.0], [79.3, 86.0], [79.4, 86.0], [79.5, 87.0], [79.6, 87.0], [79.7, 87.0], [79.8, 88.0], [79.9, 88.0], [80.0, 88.0], [80.1, 89.0], [80.2, 89.0], [80.3, 89.0], [80.4, 90.0], [80.5, 90.0], [80.6, 91.0], [80.7, 91.0], [80.8, 91.0], [80.9, 92.0], [81.0, 92.0], [81.1, 92.0], [81.2, 93.0], [81.3, 93.0], [81.4, 93.0], [81.5, 94.0], [81.6, 94.0], [81.7, 95.0], [81.8, 95.0], [81.9, 95.0], [82.0, 96.0], [82.1, 96.0], [82.2, 96.0], [82.3, 97.0], [82.4, 97.0], [82.5, 97.0], [82.6, 98.0], [82.7, 98.0], [82.8, 99.0], [82.9, 99.0], [83.0, 99.0], [83.1, 100.0], [83.2, 100.0], [83.3, 100.0], [83.4, 101.0], [83.5, 101.0], [83.6, 101.0], [83.7, 102.0], [83.8, 102.0], [83.9, 102.0], [84.0, 103.0], [84.1, 103.0], [84.2, 104.0], [84.3, 104.0], [84.4, 104.0], [84.5, 105.0], [84.6, 105.0], [84.7, 105.0], [84.8, 106.0], [84.9, 106.0], [85.0, 106.0], [85.1, 107.0], [85.2, 107.0], [85.3, 107.0], [85.4, 108.0], [85.5, 108.0], [85.6, 109.0], [85.7, 109.0], [85.8, 109.0], [85.9, 110.0], [86.0, 110.0], [86.1, 110.0], [86.2, 111.0], [86.3, 111.0], [86.4, 111.0], [86.5, 112.0], [86.6, 112.0], [86.7, 112.0], [86.8, 113.0], [86.9, 113.0], [87.0, 114.0], [87.1, 114.0], [87.2, 114.0], [87.3, 115.0], [87.4, 115.0], [87.5, 115.0], [87.6, 116.0], [87.7, 116.0], [87.8, 116.0], [87.9, 117.0], [88.0, 117.0], [88.1, 117.0], [88.2, 118.0], [88.3, 118.0], [88.4, 118.0], [88.5, 119.0], [88.6, 119.0], [88.7, 119.0], [88.8, 120.0], [88.9, 120.0], [89.0, 120.0], [89.1, 121.0], [89.2, 121.0], [89.3, 121.0], [89.4, 121.0], [89.5, 122.0], [89.6, 122.0], [89.7, 122.0], [89.8, 122.0], [89.9, 123.0], [90.0, 123.0], [90.1, 123.0], [90.2, 124.0], [90.3, 124.0], [90.4, 124.0], [90.5, 125.0], [90.6, 125.0], [90.7, 125.0], [90.8, 125.0], [90.9, 126.0], [91.0, 126.0], [91.1, 126.0], [91.2, 126.0], [91.3, 127.0], [91.4, 127.0], [91.5, 127.0], [91.6, 128.0], [91.7, 128.0], [91.8, 128.0], [91.9, 128.0], [92.0, 129.0], [92.1, 129.0], [92.2, 129.0], [92.3, 129.0], [92.4, 130.0], [92.5, 130.0], [92.6, 131.0], [92.7, 131.0], [92.8, 131.0], [92.9, 132.0], [93.0, 132.0], [93.1, 132.0], [93.2, 133.0], [93.3, 133.0], [93.4, 134.0], [93.5, 134.0], [93.6, 134.0], [93.7, 135.0], [93.8, 135.0], [93.9, 135.0], [94.0, 136.0], [94.1, 136.0], [94.2, 137.0], [94.3, 137.0], [94.4, 137.0], [94.5, 138.0], [94.6, 138.0], [94.7, 139.0], [94.8, 139.0], [94.9, 140.0], [95.0, 140.0], [95.1, 140.0], [95.2, 141.0], [95.3, 141.0], [95.4, 142.0], [95.5, 142.0], [95.6, 142.0], [95.7, 143.0], [95.8, 143.0], [95.9, 144.0], [96.0, 144.0], [96.1, 145.0], [96.2, 145.0], [96.3, 146.0], [96.4, 146.0], [96.5, 146.0], [96.6, 147.0], [96.7, 147.0], [96.8, 148.0], [96.9, 149.0], [97.0, 149.0], [97.1, 150.0], [97.2, 150.0], [97.3, 151.0], [97.4, 151.0], [97.5, 152.0], [97.6, 153.0], [97.7, 153.0], [97.8, 154.0], [97.9, 155.0], [98.0, 155.0], [98.1, 156.0], [98.2, 158.0], [98.3, 158.0], [98.4, 159.0], [98.5, 160.0], [98.6, 161.0], [98.7, 163.0], [98.8, 163.0], [98.9, 165.0], [99.0, 167.0], [99.1, 169.0], [99.2, 171.0], [99.3, 174.0], [99.4, 178.0], [99.5, 182.0], [99.6, 190.0], [99.7, 203.0], [99.8, 209.0], [99.9, 216.0], [100.0, 253.0]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 4.0], [9.1, 4.0], [9.2, 4.0], [9.3, 4.0], [9.4, 4.0], [9.5, 4.0], [9.6, 4.0], [9.7, 4.0], [9.8, 4.0], [9.9, 4.0], [10.0, 4.0], [10.1, 4.0], [10.2, 4.0], [10.3, 4.0], [10.4, 4.0], [10.5, 4.0], [10.6, 4.0], [10.7, 4.0], [10.8, 4.0], [10.9, 4.0], [11.0, 5.0], [11.1, 5.0], [11.2, 5.0], [11.3, 5.0], [11.4, 5.0], [11.5, 5.0], [11.6, 5.0], [11.7, 5.0], [11.8, 5.0], [11.9, 5.0], [12.0, 5.0], [12.1, 5.0], [12.2, 5.0], [12.3, 5.0], [12.4, 5.0], [12.5, 5.0], [12.6, 5.0], [12.7, 6.0], [12.8, 6.0], [12.9, 6.0], [13.0, 6.0], [13.1, 6.0], [13.2, 6.0], [13.3, 6.0], [13.4, 6.0], [13.5, 6.0], [13.6, 6.0], [13.7, 6.0], [13.8, 6.0], [13.9, 6.0], [14.0, 6.0], [14.1, 6.0], [14.2, 6.0], [14.3, 6.0], [14.4, 6.0], [14.5, 6.0], [14.6, 7.0], [14.7, 7.0], [14.8, 7.0], [14.9, 7.0], [15.0, 7.0], [15.1, 7.0], [15.2, 7.0], [15.3, 7.0], [15.4, 7.0], [15.5, 7.0], [15.6, 7.0], [15.7, 7.0], [15.8, 7.0], [15.9, 7.0], [16.0, 7.0], [16.1, 7.0], [16.2, 7.0], [16.3, 7.0], [16.4, 7.0], [16.5, 8.0], [16.6, 8.0], [16.7, 8.0], [16.8, 8.0], [16.9, 8.0], [17.0, 8.0], [17.1, 8.0], [17.2, 8.0], [17.3, 8.0], [17.4, 8.0], [17.5, 8.0], [17.6, 8.0], [17.7, 8.0], [17.8, 8.0], [17.9, 8.0], [18.0, 8.0], [18.1, 8.0], [18.2, 8.0], [18.3, 9.0], [18.4, 9.0], [18.5, 9.0], [18.6, 9.0], [18.7, 9.0], [18.8, 9.0], [18.9, 9.0], [19.0, 9.0], [19.1, 9.0], [19.2, 9.0], [19.3, 9.0], [19.4, 9.0], [19.5, 9.0], [19.6, 9.0], [19.7, 9.0], [19.8, 9.0], [19.9, 9.0], [20.0, 10.0], [20.1, 10.0], [20.2, 10.0], [20.3, 10.0], [20.4, 10.0], [20.5, 10.0], [20.6, 10.0], [20.7, 10.0], [20.8, 10.0], [20.9, 10.0], [21.0, 10.0], [21.1, 10.0], [21.2, 10.0], [21.3, 10.0], [21.4, 10.0], [21.5, 11.0], [21.6, 11.0], [21.7, 11.0], [21.8, 11.0], [21.9, 11.0], [22.0, 11.0], [22.1, 11.0], [22.2, 11.0], [22.3, 11.0], [22.4, 11.0], [22.5, 11.0], [22.6, 11.0], [22.7, 11.0], [22.8, 11.0], [22.9, 12.0], [23.0, 12.0], [23.1, 12.0], [23.2, 12.0], [23.3, 12.0], [23.4, 12.0], [23.5, 12.0], [23.6, 12.0], [23.7, 12.0], [23.8, 12.0], [23.9, 12.0], [24.0, 12.0], [24.1, 12.0], [24.2, 12.0], [24.3, 13.0], [24.4, 13.0], [24.5, 13.0], [24.6, 13.0], [24.7, 13.0], [24.8, 13.0], [24.9, 13.0], [25.0, 13.0], [25.1, 13.0], [25.2, 13.0], [25.3, 13.0], [25.4, 13.0], [25.5, 13.0], [25.6, 13.0], [25.7, 14.0], [25.8, 14.0], [25.9, 14.0], [26.0, 14.0], [26.1, 14.0], [26.2, 14.0], [26.3, 14.0], [26.4, 14.0], [26.5, 14.0], [26.6, 14.0], [26.7, 14.0], [26.8, 14.0], [26.9, 14.0], [27.0, 14.0], [27.1, 14.0], [27.2, 15.0], [27.3, 15.0], [27.4, 15.0], [27.5, 15.0], [27.6, 15.0], [27.7, 15.0], [27.8, 15.0], [27.9, 15.0], [28.0, 15.0], [28.1, 15.0], [28.2, 15.0], [28.3, 15.0], [28.4, 15.0], [28.5, 15.0], [28.6, 16.0], [28.7, 16.0], [28.8, 16.0], [28.9, 16.0], [29.0, 16.0], [29.1, 16.0], [29.2, 16.0], [29.3, 16.0], [29.4, 16.0], [29.5, 16.0], [29.6, 16.0], [29.7, 16.0], [29.8, 16.0], [29.9, 16.0], [30.0, 17.0], [30.1, 17.0], [30.2, 17.0], [30.3, 17.0], [30.4, 17.0], [30.5, 17.0], [30.6, 17.0], [30.7, 17.0], [30.8, 17.0], [30.9, 17.0], [31.0, 17.0], [31.1, 17.0], [31.2, 17.0], [31.3, 18.0], [31.4, 18.0], [31.5, 18.0], [31.6, 18.0], [31.7, 18.0], [31.8, 18.0], [31.9, 18.0], [32.0, 18.0], [32.1, 18.0], [32.2, 18.0], [32.3, 18.0], [32.4, 18.0], [32.5, 18.0], [32.6, 19.0], [32.7, 19.0], [32.8, 19.0], [32.9, 19.0], [33.0, 19.0], [33.1, 19.0], [33.2, 19.0], [33.3, 19.0], [33.4, 19.0], [33.5, 19.0], [33.6, 19.0], [33.7, 19.0], [33.8, 19.0], [33.9, 19.0], [34.0, 20.0], [34.1, 20.0], [34.2, 20.0], [34.3, 20.0], [34.4, 20.0], [34.5, 20.0], [34.6, 20.0], [34.7, 20.0], [34.8, 20.0], [34.9, 20.0], [35.0, 20.0], [35.1, 20.0], [35.2, 20.0], [35.3, 21.0], [35.4, 21.0], [35.5, 21.0], [35.6, 21.0], [35.7, 21.0], [35.8, 21.0], [35.9, 21.0], [36.0, 21.0], [36.1, 21.0], [36.2, 21.0], [36.3, 21.0], [36.4, 21.0], [36.5, 21.0], [36.6, 22.0], [36.7, 22.0], [36.8, 22.0], [36.9, 22.0], [37.0, 22.0], [37.1, 22.0], [37.2, 22.0], [37.3, 22.0], [37.4, 22.0], [37.5, 22.0], [37.6, 22.0], [37.7, 22.0], [37.8, 23.0], [37.9, 23.0], [38.0, 23.0], [38.1, 23.0], [38.2, 23.0], [38.3, 23.0], [38.4, 23.0], [38.5, 23.0], [38.6, 23.0], [38.7, 23.0], [38.8, 23.0], [38.9, 23.0], [39.0, 24.0], [39.1, 24.0], [39.2, 24.0], [39.3, 24.0], [39.4, 24.0], [39.5, 24.0], [39.6, 24.0], [39.7, 24.0], [39.8, 24.0], [39.9, 24.0], [40.0, 24.0], [40.1, 24.0], [40.2, 24.0], [40.3, 24.0], [40.4, 25.0], [40.5, 25.0], [40.6, 25.0], [40.7, 25.0], [40.8, 25.0], [40.9, 25.0], [41.0, 25.0], [41.1, 25.0], [41.2, 25.0], [41.3, 25.0], [41.4, 25.0], [41.5, 26.0], [41.6, 26.0], [41.7, 26.0], [41.8, 26.0], [41.9, 26.0], [42.0, 26.0], [42.1, 26.0], [42.2, 26.0], [42.3, 26.0], [42.4, 26.0], [42.5, 26.0], [42.6, 26.0], [42.7, 26.0], [42.8, 27.0], [42.9, 27.0], [43.0, 27.0], [43.1, 27.0], [43.2, 27.0], [43.3, 27.0], [43.4, 27.0], [43.5, 27.0], [43.6, 27.0], [43.7, 27.0], [43.8, 27.0], [43.9, 27.0], [44.0, 28.0], [44.1, 28.0], [44.2, 28.0], [44.3, 28.0], [44.4, 28.0], [44.5, 28.0], [44.6, 28.0], [44.7, 28.0], [44.8, 28.0], [44.9, 28.0], [45.0, 28.0], [45.1, 28.0], [45.2, 28.0], [45.3, 29.0], [45.4, 29.0], [45.5, 29.0], [45.6, 29.0], [45.7, 29.0], [45.8, 29.0], [45.9, 29.0], [46.0, 29.0], [46.1, 29.0], [46.2, 29.0], [46.3, 29.0], [46.4, 29.0], [46.5, 29.0], [46.6, 30.0], [46.7, 30.0], [46.8, 30.0], [46.9, 30.0], [47.0, 30.0], [47.1, 30.0], [47.2, 30.0], [47.3, 30.0], [47.4, 30.0], [47.5, 30.0], [47.6, 30.0], [47.7, 30.0], [47.8, 31.0], [47.9, 31.0], [48.0, 31.0], [48.1, 31.0], [48.2, 31.0], [48.3, 31.0], [48.4, 31.0], [48.5, 31.0], [48.6, 31.0], [48.7, 31.0], [48.8, 31.0], [48.9, 32.0], [49.0, 32.0], [49.1, 32.0], [49.2, 32.0], [49.3, 32.0], [49.4, 32.0], [49.5, 32.0], [49.6, 32.0], [49.7, 32.0], [49.8, 32.0], [49.9, 32.0], [50.0, 33.0], [50.1, 33.0], [50.2, 33.0], [50.3, 33.0], [50.4, 33.0], [50.5, 33.0], [50.6, 33.0], [50.7, 33.0], [50.8, 33.0], [50.9, 33.0], [51.0, 33.0], [51.1, 33.0], [51.2, 34.0], [51.3, 34.0], [51.4, 34.0], [51.5, 34.0], [51.6, 34.0], [51.7, 34.0], [51.8, 34.0], [51.9, 34.0], [52.0, 34.0], [52.1, 34.0], [52.2, 35.0], [52.3, 35.0], [52.4, 35.0], [52.5, 35.0], [52.6, 35.0], [52.7, 35.0], [52.8, 35.0], [52.9, 35.0], [53.0, 35.0], [53.1, 35.0], [53.2, 35.0], [53.3, 36.0], [53.4, 36.0], [53.5, 36.0], [53.6, 36.0], [53.7, 36.0], [53.8, 36.0], [53.9, 36.0], [54.0, 36.0], [54.1, 36.0], [54.2, 37.0], [54.3, 37.0], [54.4, 37.0], [54.5, 37.0], [54.6, 37.0], [54.7, 37.0], [54.8, 37.0], [54.9, 37.0], [55.0, 37.0], [55.1, 37.0], [55.2, 37.0], [55.3, 38.0], [55.4, 38.0], [55.5, 38.0], [55.6, 38.0], [55.7, 38.0], [55.8, 38.0], [55.9, 38.0], [56.0, 38.0], [56.1, 38.0], [56.2, 38.0], [56.3, 39.0], [56.4, 39.0], [56.5, 39.0], [56.6, 39.0], [56.7, 39.0], [56.8, 39.0], [56.9, 39.0], [57.0, 39.0], [57.1, 39.0], [57.2, 39.0], [57.3, 40.0], [57.4, 40.0], [57.5, 40.0], [57.6, 40.0], [57.7, 40.0], [57.8, 40.0], [57.9, 40.0], [58.0, 40.0], [58.1, 40.0], [58.2, 41.0], [58.3, 41.0], [58.4, 41.0], [58.5, 41.0], [58.6, 41.0], [58.7, 41.0], [58.8, 41.0], [58.9, 41.0], [59.0, 41.0], [59.1, 42.0], [59.2, 42.0], [59.3, 42.0], [59.4, 42.0], [59.5, 42.0], [59.6, 42.0], [59.7, 42.0], [59.8, 42.0], [59.9, 43.0], [60.0, 43.0], [60.1, 43.0], [60.2, 43.0], [60.3, 43.0], [60.4, 43.0], [60.5, 43.0], [60.6, 44.0], [60.7, 44.0], [60.8, 44.0], [60.9, 44.0], [61.0, 44.0], [61.1, 44.0], [61.2, 44.0], [61.3, 44.0], [61.4, 45.0], [61.5, 45.0], [61.6, 45.0], [61.7, 45.0], [61.8, 45.0], [61.9, 45.0], [62.0, 45.0], [62.1, 45.0], [62.2, 46.0], [62.3, 46.0], [62.4, 46.0], [62.5, 46.0], [62.6, 46.0], [62.7, 46.0], [62.8, 47.0], [62.9, 47.0], [63.0, 47.0], [63.1, 47.0], [63.2, 47.0], [63.3, 47.0], [63.4, 47.0], [63.5, 48.0], [63.6, 48.0], [63.7, 48.0], [63.8, 48.0], [63.9, 48.0], [64.0, 48.0], [64.1, 49.0], [64.2, 49.0], [64.3, 49.0], [64.4, 49.0], [64.5, 49.0], [64.6, 49.0], [64.7, 50.0], [64.8, 50.0], [64.9, 50.0], [65.0, 50.0], [65.1, 50.0], [65.2, 50.0], [65.3, 51.0], [65.4, 51.0], [65.5, 51.0], [65.6, 51.0], [65.7, 51.0], [65.8, 51.0], [65.9, 52.0], [66.0, 52.0], [66.1, 52.0], [66.2, 52.0], [66.3, 52.0], [66.4, 52.0], [66.5, 53.0], [66.6, 53.0], [66.7, 53.0], [66.8, 53.0], [66.9, 53.0], [67.0, 54.0], [67.1, 54.0], [67.2, 54.0], [67.3, 54.0], [67.4, 54.0], [67.5, 54.0], [67.6, 55.0], [67.7, 55.0], [67.8, 55.0], [67.9, 55.0], [68.0, 55.0], [68.1, 56.0], [68.2, 56.0], [68.3, 56.0], [68.4, 56.0], [68.5, 56.0], [68.6, 57.0], [68.7, 57.0], [68.8, 57.0], [68.9, 57.0], [69.0, 57.0], [69.1, 58.0], [69.2, 58.0], [69.3, 58.0], [69.4, 58.0], [69.5, 59.0], [69.6, 59.0], [69.7, 59.0], [69.8, 59.0], [69.9, 60.0], [70.0, 60.0], [70.1, 60.0], [70.2, 60.0], [70.3, 60.0], [70.4, 61.0], [70.5, 61.0], [70.6, 61.0], [70.7, 61.0], [70.8, 62.0], [70.9, 62.0], [71.0, 62.0], [71.1, 62.0], [71.2, 63.0], [71.3, 63.0], [71.4, 63.0], [71.5, 63.0], [71.6, 63.0], [71.7, 64.0], [71.8, 64.0], [71.9, 64.0], [72.0, 64.0], [72.1, 65.0], [72.2, 65.0], [72.3, 65.0], [72.4, 65.0], [72.5, 66.0], [72.6, 66.0], [72.7, 66.0], [72.8, 66.0], [72.9, 67.0], [73.0, 67.0], [73.1, 67.0], [73.2, 67.0], [73.3, 68.0], [73.4, 68.0], [73.5, 68.0], [73.6, 68.0], [73.7, 69.0], [73.8, 69.0], [73.9, 69.0], [74.0, 70.0], [74.1, 70.0], [74.2, 70.0], [74.3, 70.0], [74.4, 71.0], [74.5, 71.0], [74.6, 71.0], [74.7, 71.0], [74.8, 72.0], [74.9, 72.0], [75.0, 72.0], [75.1, 72.0], [75.2, 73.0], [75.3, 73.0], [75.4, 73.0], [75.5, 73.0], [75.6, 74.0], [75.7, 74.0], [75.8, 74.0], [75.9, 75.0], [76.0, 75.0], [76.1, 75.0], [76.2, 75.0], [76.3, 76.0], [76.4, 76.0], [76.5, 76.0], [76.6, 76.0], [76.7, 77.0], [76.8, 77.0], [76.9, 77.0], [77.0, 77.0], [77.1, 78.0], [77.2, 78.0], [77.3, 78.0], [77.4, 79.0], [77.5, 79.0], [77.6, 79.0], [77.7, 79.0], [77.8, 80.0], [77.9, 80.0], [78.0, 81.0], [78.1, 81.0], [78.2, 81.0], [78.3, 81.0], [78.4, 82.0], [78.5, 82.0], [78.6, 82.0], [78.7, 83.0], [78.8, 83.0], [78.9, 83.0], [79.0, 84.0], [79.1, 84.0], [79.2, 84.0], [79.3, 85.0], [79.4, 85.0], [79.5, 85.0], [79.6, 86.0], [79.7, 86.0], [79.8, 86.0], [79.9, 87.0], [80.0, 87.0], [80.1, 87.0], [80.2, 88.0], [80.3, 88.0], [80.4, 88.0], [80.5, 89.0], [80.6, 89.0], [80.7, 89.0], [80.8, 90.0], [80.9, 90.0], [81.0, 90.0], [81.1, 91.0], [81.2, 91.0], [81.3, 92.0], [81.4, 92.0], [81.5, 92.0], [81.6, 93.0], [81.7, 93.0], [81.8, 94.0], [81.9, 94.0], [82.0, 94.0], [82.1, 95.0], [82.2, 95.0], [82.3, 95.0], [82.4, 96.0], [82.5, 96.0], [82.6, 96.0], [82.7, 97.0], [82.8, 97.0], [82.9, 98.0], [83.0, 98.0], [83.1, 98.0], [83.2, 99.0], [83.3, 99.0], [83.4, 99.0], [83.5, 100.0], [83.6, 100.0], [83.7, 101.0], [83.8, 101.0], [83.9, 102.0], [84.0, 102.0], [84.1, 102.0], [84.2, 103.0], [84.3, 103.0], [84.4, 103.0], [84.5, 104.0], [84.6, 104.0], [84.7, 104.0], [84.8, 105.0], [84.9, 105.0], [85.0, 105.0], [85.1, 106.0], [85.2, 106.0], [85.3, 106.0], [85.4, 107.0], [85.5, 107.0], [85.6, 108.0], [85.7, 108.0], [85.8, 108.0], [85.9, 109.0], [86.0, 109.0], [86.1, 109.0], [86.2, 109.0], [86.3, 110.0], [86.4, 110.0], [86.5, 111.0], [86.6, 111.0], [86.7, 111.0], [86.8, 112.0], [86.9, 112.0], [87.0, 112.0], [87.1, 113.0], [87.2, 113.0], [87.3, 113.0], [87.4, 114.0], [87.5, 114.0], [87.6, 114.0], [87.7, 115.0], [87.8, 115.0], [87.9, 115.0], [88.0, 116.0], [88.1, 116.0], [88.2, 116.0], [88.3, 117.0], [88.4, 117.0], [88.5, 117.0], [88.6, 118.0], [88.7, 118.0], [88.8, 118.0], [88.9, 119.0], [89.0, 119.0], [89.1, 119.0], [89.2, 120.0], [89.3, 120.0], [89.4, 120.0], [89.5, 120.0], [89.6, 121.0], [89.7, 121.0], [89.8, 121.0], [89.9, 122.0], [90.0, 122.0], [90.1, 122.0], [90.2, 122.0], [90.3, 123.0], [90.4, 123.0], [90.5, 123.0], [90.6, 124.0], [90.7, 124.0], [90.8, 124.0], [90.9, 124.0], [91.0, 125.0], [91.1, 125.0], [91.2, 125.0], [91.3, 125.0], [91.4, 126.0], [91.5, 126.0], [91.6, 126.0], [91.7, 126.0], [91.8, 127.0], [91.9, 127.0], [92.0, 127.0], [92.1, 128.0], [92.2, 128.0], [92.3, 128.0], [92.4, 129.0], [92.5, 129.0], [92.6, 129.0], [92.7, 130.0], [92.8, 130.0], [92.9, 130.0], [93.0, 131.0], [93.1, 131.0], [93.2, 132.0], [93.3, 132.0], [93.4, 132.0], [93.5, 133.0], [93.6, 133.0], [93.7, 133.0], [93.8, 134.0], [93.9, 134.0], [94.0, 135.0], [94.1, 135.0], [94.2, 135.0], [94.3, 136.0], [94.4, 136.0], [94.5, 137.0], [94.6, 137.0], [94.7, 137.0], [94.8, 138.0], [94.9, 138.0], [95.0, 139.0], [95.1, 139.0], [95.2, 140.0], [95.3, 140.0], [95.4, 140.0], [95.5, 141.0], [95.6, 141.0], [95.7, 142.0], [95.8, 142.0], [95.9, 143.0], [96.0, 143.0], [96.1, 144.0], [96.2, 144.0], [96.3, 145.0], [96.4, 145.0], [96.5, 145.0], [96.6, 146.0], [96.7, 146.0], [96.8, 147.0], [96.9, 148.0], [97.0, 148.0], [97.1, 149.0], [97.2, 149.0], [97.3, 150.0], [97.4, 151.0], [97.5, 152.0], [97.6, 152.0], [97.7, 153.0], [97.8, 154.0], [97.9, 155.0], [98.0, 156.0], [98.1, 157.0], [98.2, 157.0], [98.3, 158.0], [98.4, 159.0], [98.5, 160.0], [98.6, 161.0], [98.7, 162.0], [98.8, 164.0], [98.9, 165.0], [99.0, 167.0], [99.1, 170.0], [99.2, 172.0], [99.3, 174.0], [99.4, 179.0], [99.5, 184.0], [99.6, 193.0], [99.7, 202.0], [99.8, 207.0], [99.9, 214.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 175.0, "minX": 0.0, "maxY": 43031.0, "series": [{"data": [[0.0, 42769.0], [100.0, 8565.0], [200.0, 184.0]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[0.0, 42887.0], [100.0, 8587.0], [200.0, 176.0]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[0.0, 43031.0], [100.0, 8377.0], [200.0, 175.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 25680.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 129071.0, "series": [{"data": [[0.0, 25680.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 129071.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 15.06405660377355, "minX": 1.73505312E12, "maxY": 140.97889944665116, "series": [{"data": [[1.73505312E12, 15.06405660377355], [1.73505318E12, 140.97889944665116]], "isOverall": false, "label": "NodeJS", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73505318E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.9532374100719426, "minX": 1.0, "maxY": 105.20772946859903, "series": [{"data": [[2.0, 1.2990654205607477], [3.0, 1.0446927374301678], [4.0, 0.9712230215827345], [5.0, 0.987654320987654], [6.0, 1.2491909385113273], [7.0, 1.521885521885523], [8.0, 1.6586102719033238], [9.0, 2.068493150684931], [10.0, 2.4424460431654684], [11.0, 2.8996415770609323], [12.0, 3.1984732824427464], [13.0, 3.4601449275362315], [14.0, 3.421052631578949], [15.0, 4.038910505836576], [16.0, 5.65158371040724], [17.0, 4.635687732342006], [18.0, 5.25], [19.0, 4.985294117647056], [20.0, 5.926530612244899], [21.0, 5.987951807228919], [22.0, 8.265700483091788], [23.0, 7.320512820512818], [24.0, 7.6050420168067205], [25.0, 8.37378640776699], [26.0, 10.152631578947366], [27.0, 9.637681159420294], [28.0, 10.289340101522841], [29.0, 10.969849246231153], [30.0, 11.83597883597884], [31.0, 12.457446808510644], [32.0, 12.652173913043477], [33.0, 14.962962962962962], [34.0, 14.564705882352937], [35.0, 16.557575757575755], [36.0, 17.585526315789473], [37.0, 18.114649681528665], [38.0, 20.23664122137405], [39.0, 18.509554140127392], [40.0, 19.6319018404908], [41.0, 21.824675324675322], [42.0, 20.627586206896535], [43.0, 24.857142857142854], [44.0, 24.673758865248224], [45.0, 24.057971014492747], [46.0, 23.5578231292517], [47.0, 23.831081081081084], [48.0, 24.650349650349664], [49.0, 25.771653543307075], [50.0, 26.765100671140953], [51.0, 27.97183098591548], [52.0, 25.441860465116275], [53.0, 27.846666666666664], [54.0, 27.874125874125877], [55.0, 23.353293413173656], [56.0, 27.399999999999995], [57.0, 25.470930232558132], [58.0, 26.031250000000007], [59.0, 30.00000000000001], [60.0, 28.297619047619047], [61.0, 27.005952380952365], [62.0, 29.200000000000003], [63.0, 29.82022471910111], [64.0, 28.205298013245038], [65.0, 29.073446327683612], [66.0, 24.009569377990438], [67.0, 20.107142857142843], [68.0, 21.296137339055786], [69.0, 21.735042735042743], [70.0, 21.3927125506073], [71.0, 24.186046511627914], [72.0, 21.13008130081301], [73.0, 24.920353982300885], [74.0, 26.597222222222204], [75.0, 23.58222222222221], [76.0, 25.759999999999994], [77.0, 27.70108695652175], [78.0, 27.459090909090914], [79.0, 27.62085308056873], [80.0, 29.822660098522157], [81.0, 29.852380952380962], [82.0, 28.24401913875597], [83.0, 31.15577889447237], [84.0, 30.398989898989875], [85.0, 28.822115384615397], [86.0, 31.27234042553191], [87.0, 31.034653465346548], [88.0, 32.38121546961327], [89.0, 34.43540669856458], [90.0, 32.17500000000001], [91.0, 35.952380952380956], [92.0, 37.91145833333334], [93.0, 35.90476190476191], [94.0, 39.09574468085106], [95.0, 39.90361445783133], [96.0, 39.47120418848169], [97.0, 40.026490066225165], [98.0, 41.69856459330146], [99.0, 42.8132530120482], [100.0, 43.69142857142854], [101.0, 43.95054945054943], [102.0, 37.704301075268795], [103.0, 44.47029702970297], [104.0, 43.47272727272727], [105.0, 46.33548387096774], [106.0, 50.452513966480446], [107.0, 46.09756097560974], [108.0, 48.062893081761], [109.0, 47.105555555555576], [110.0, 48.232258064516174], [111.0, 46.15639810426539], [112.0, 46.701298701298704], [113.0, 48.839285714285715], [114.0, 47.6731707317073], [115.0, 46.7183908045977], [116.0, 53.38271604938267], [117.0, 54.249999999999986], [118.0, 54.34615384615384], [119.0, 59.83536585365856], [120.0, 49.66025641025643], [121.0, 51.342391304347814], [122.0, 38.68584070796463], [123.0, 41.97391304347823], [124.0, 40.3613861386139], [125.0, 43.587443946188316], [126.0, 46.089686098654674], [127.0, 45.61576354679804], [128.0, 47.134782608695666], [129.0, 41.309523809523796], [130.0, 46.075117370891995], [131.0, 44.24774774774776], [132.0, 46.94366197183099], [133.0, 50.69953051643193], [134.0, 48.60512820512821], [135.0, 49.13829787234042], [136.0, 52.63451776649746], [137.0, 50.621951219512184], [138.0, 43.396648044692746], [139.0, 56.960975609756076], [140.0, 50.72985781990523], [141.0, 56.76041666666667], [142.0, 50.35602094240838], [143.0, 51.33163265306122], [144.0, 59.0544554455446], [145.0, 46.51595744680852], [146.0, 59.51741293532339], [147.0, 52.298165137614674], [148.0, 56.52432432432429], [149.0, 66.7208121827411], [150.0, 52.29670329670329], [151.0, 65.14193548387095], [152.0, 61.20283018867922], [153.0, 62.700636942675146], [154.0, 66.84753363228698], [155.0, 65.03529411764704], [156.0, 58.94736842105265], [157.0, 69.07826086956526], [158.0, 60.12000000000003], [159.0, 81.1105527638191], [160.0, 58.65573770491804], [161.0, 70.7602739726027], [162.0, 72.10476190476193], [163.0, 60.1151832460733], [164.0, 73.48850574712641], [165.0, 63.01775147928995], [166.0, 75.93969849246223], [167.0, 66.23756906077347], [168.0, 79.72592592592589], [169.0, 79.03482587064676], [170.0, 69.1883116883117], [171.0, 67.2548076923077], [172.0, 83.90123456790121], [173.0, 59.319148936170244], [174.0, 94.95477386934677], [175.0, 60.463157894736824], [176.0, 83.32894736842104], [177.0, 55.8018018018018], [178.0, 59.06639004149375], [179.0, 62.361111111111114], [180.0, 57.595454545454515], [181.0, 72.27826086956522], [182.0, 62.209999999999994], [183.0, 59.59487179487179], [184.0, 65.43693693693693], [185.0, 65.07142857142857], [186.0, 66.78499999999998], [187.0, 74.81927710843374], [188.0, 69.42241379310347], [189.0, 82.56571428571426], [190.0, 70.03658536585367], [191.0, 90.31791907514454], [192.0, 83.24000000000002], [193.0, 91.8918918918919], [194.0, 76.38775510204084], [195.0, 84.82089552238807], [196.0, 79.9698795180723], [197.0, 93.40092165898616], [198.0, 73.13924050632914], [199.0, 105.20772946859903], [200.0, 77.63877629063107], [1.0, 1.4333333333333333]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[123.76188904848811, 48.67980123451957]], "isOverall": false, "label": "Delete-Aggregated", "isController": false}, {"data": [[2.0, 1.186915887850467], [3.0, 1.3480662983425413], [4.0, 1.103942652329749], [5.0, 1.2685185185185188], [6.0, 1.503246753246753], [7.0, 1.993355481727574], [8.0, 1.9454545454545444], [9.0, 2.56849315068493], [10.0, 2.7598566308243724], [11.0, 3.1666666666666665], [12.0, 3.8326996197718635], [13.0, 3.8550185873605947], [14.0, 3.9759450171821316], [15.0, 4.691406250000001], [16.0, 5.425339366515835], [17.0, 5.099264705882354], [18.0, 5.410358565737051], [19.0, 5.336956521739131], [20.0, 6.493775933609958], [21.0, 6.704724409448823], [22.0, 8.014354066985645], [23.0, 7.72881355932203], [24.0, 8.016736401673645], [25.0, 9.273631840796016], [26.0, 10.124352331606218], [27.0, 10.00966183574879], [28.0, 10.685279187817263], [29.0, 11.251308900523558], [30.0, 11.984924623115585], [31.0, 12.535714285714283], [32.0, 13.497041420118343], [33.0, 16.222222222222218], [34.0, 15.568965517241379], [35.0, 16.77142857142857], [36.0, 17.89189189189188], [37.0, 18.019230769230774], [38.0, 21.395522388059693], [39.0, 19.276729559748432], [40.0, 19.21472392638037], [41.0, 21.93959731543625], [42.0, 21.21999999999999], [43.0, 24.17073170731707], [44.0, 24.568493150684944], [45.0, 23.830882352941174], [46.0, 24.074829931972797], [47.0, 23.086666666666673], [48.0, 26.552447552447553], [49.0, 23.82089552238807], [50.0, 28.5], [51.0, 28.841379310344834], [52.0, 27.78740157480316], [53.0, 28.71523178807947], [54.0, 30.688405797101456], [55.0, 26.13333333333332], [56.0, 27.43975903614458], [57.0, 25.994117647058832], [58.0, 26.165644171779146], [59.0, 29.643356643356643], [60.0, 28.880952380952387], [61.0, 28.229813664596268], [62.0, 32.287671232876704], [63.0, 28.73988439306359], [64.0, 28.644295302013415], [65.0, 30.779569892473113], [66.0, 23.995145631067953], [67.0, 21.13200000000001], [68.0, 21.9877049180328], [69.0, 23.39224137931035], [70.0, 23.408510638297866], [71.0, 25.611353711790397], [72.0, 22.388429752066106], [73.0, 25.625570776255707], [74.0, 25.81333333333334], [75.0, 24.51598173515981], [76.0, 27.013100436681228], [77.0, 31.45161290322583], [78.0, 29.552511415525117], [79.0, 29.44036697247705], [80.0, 30.49740932642487], [81.0, 29.563063063063055], [82.0, 30.364077669902922], [83.0, 31.50746268656718], [84.0, 30.974999999999998], [85.0, 31.85849056603774], [86.0, 29.229729729729723], [87.0, 32.04054054054053], [88.0, 31.524096385542173], [89.0, 34.999999999999986], [90.0, 32.97652582159624], [91.0, 35.84126984126982], [92.0, 37.39267015706806], [93.0, 36.767195767195766], [94.0, 39.842391304347835], [95.0, 41.52873563218391], [96.0, 40.11666666666669], [97.0, 42.71005917159764], [98.0, 40.07575757575757], [99.0, 43.435294117647054], [100.0, 41.5654761904762], [101.0, 44.48979591836733], [102.0, 39.856353591160214], [103.0, 44.056410256410274], [104.0, 47.028571428571425], [105.0, 46.60958904109588], [106.0, 49.613402061855666], [107.0, 49.33548387096776], [108.0, 47.5654761904762], [109.0, 47.97222222222223], [110.0, 45.29139072847681], [111.0, 47.52657004830917], [112.0, 45.186335403726716], [113.0, 53.497076023391806], [114.0, 47.55339805825243], [115.0, 48.545454545454554], [116.0, 51.679487179487175], [117.0, 54.86440677966102], [118.0, 56.13450292397661], [119.0, 59.71428571428574], [120.0, 49.92307692307692], [121.0, 52.286432160804004], [122.0, 39.29302325581392], [123.0, 44.30803571428572], [124.0, 41.69668246445497], [125.0, 44.33636363636361], [126.0, 44.5738396624473], [127.0, 42.252631578947366], [128.0, 46.5344827586207], [129.0, 41.095238095238045], [130.0, 47.96846846846848], [131.0, 45.91705069124423], [132.0, 45.937198067632835], [133.0, 49.454976303317565], [134.0, 55.935], [135.0, 45.49450549450554], [136.0, 53.511520737327245], [137.0, 51.140350877192965], [138.0, 46.494565217391326], [139.0, 51.48258706467663], [140.0, 56.981900452488695], [141.0, 61.20603015075379], [142.0, 51.0277777777778], [143.0, 55.047619047619065], [144.0, 58.82608695652173], [145.0, 49.27380952380955], [146.0, 53.606481481481474], [147.0, 61.08181818181824], [148.0, 55.21348314606744], [149.0, 63.358208955223915], [150.0, 61.90960451977403], [151.0, 63.98089171974523], [152.0, 63.623853211009184], [153.0, 61.64779874213838], [154.0, 65.67906976744182], [155.0, 57.38271604938272], [156.0, 67.42592592592592], [157.0, 66.02857142857142], [158.0, 72.51633986928101], [159.0, 74.00499999999995], [160.0, 68.87709497206701], [161.0, 63.48920863309356], [162.0, 72.59405940594061], [163.0, 65.2178217821782], [164.0, 60.610169491525475], [165.0, 67.42666666666665], [166.0, 71.64383561643831], [167.0, 69.64640883977896], [168.0, 65.47368421052633], [169.0, 85.99489795918375], [170.0, 63.35668789808919], [171.0, 71.25821596244123], [172.0, 75.78145695364238], [173.0, 72.8456375838926], [174.0, 87.09183673469386], [175.0, 65.38571428571426], [176.0, 69.68275862068967], [177.0, 63.855932203389834], [178.0, 57.13181818181817], [179.0, 59.372807017543835], [180.0, 67.41228070175434], [181.0, 60.897872340425494], [182.0, 66.42999999999995], [183.0, 63.58791208791208], [184.0, 65.91928251121081], [185.0, 62.10084033613442], [186.0, 64.31155778894468], [187.0, 77.00000000000004], [188.0, 78.89671361502349], [189.0, 84.94148936170208], [190.0, 79.0987654320988], [191.0, 83.8695652173913], [192.0, 84.21621621621624], [193.0, 92.18867924528304], [194.0, 74.90270270270267], [195.0, 85.74675324675322], [196.0, 71.79084967320257], [197.0, 99.9718309859155], [198.0, 78.92307692307692], [199.0, 94.70499999999994], [200.0, 78.12135810965826], [1.0, 2.1290322580645165]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[123.69794772507302, 49.169370764763045]], "isOverall": false, "label": "Register-Aggregated", "isController": false}, {"data": [[2.0, 1.056603773584906], [3.0, 1.0441988950276242], [4.0, 0.9532374100719426], [5.0, 1.0368098159509214], [6.0, 1.4071661237785016], [7.0, 1.7796610169491527], [8.0, 1.700598802395208], [9.0, 2.120274914089346], [10.0, 2.5214285714285714], [11.0, 2.7420494699646616], [12.0, 3.2934362934362937], [13.0, 3.389705882352941], [14.0, 3.463667820069202], [15.0, 4.096525096525097], [16.0, 4.909090909090912], [17.0, 4.571428571428574], [18.0, 4.807086614173227], [19.0, 4.942857142857145], [20.0, 5.949579831932775], [21.0, 5.859437751004012], [22.0, 7.689320388349516], [23.0, 6.592592592592594], [24.0, 7.213043478260869], [25.0, 8.817307692307688], [26.0, 9.742268041237114], [27.0, 10.487562189054719], [28.0, 10.34010152284264], [29.0, 10.549504950495045], [30.0, 11.225274725274721], [31.0, 11.106796116504857], [32.0, 12.988372093023251], [33.0, 14.329268292682928], [34.0, 14.142857142857142], [35.0, 15.578313253012048], [36.0, 15.653594771241837], [37.0, 17.156862745098035], [38.0, 20.292307692307695], [39.0, 17.729559748427675], [40.0, 18.298136645962728], [41.0, 20.228758169934643], [42.0, 21.049645390070925], [43.0, 23.409090909090914], [44.0, 23.753623188405804], [45.0, 21.16058394160585], [46.0, 23.339869281045768], [47.0, 24.119205298013235], [48.0, 24.517730496453904], [49.0, 25.1796875], [50.0, 26.979999999999997], [51.0, 27.930555555555568], [52.0, 25.145038167938935], [53.0, 27.020833333333336], [54.0, 28.842465753424655], [55.0, 22.927272727272733], [56.0, 25.087500000000006], [57.0, 25.30588235294118], [58.0, 25.633540372670808], [59.0, 28.978873239436624], [60.0, 27.538922155688617], [61.0, 28.630952380952376], [62.0, 29.673611111111114], [63.0, 28.335294117647052], [64.0, 27.934640522875817], [65.0, 28.689265536723177], [66.0, 23.812499999999986], [67.0, 19.075396825396812], [68.0, 20.341563786008223], [69.0, 19.852173913043465], [70.0, 20.799180327868847], [71.0, 22.804761904761904], [72.0, 20.79761904761904], [73.0, 24.499999999999986], [74.0, 23.146919431279624], [75.0, 25.842794759825335], [76.0, 22.901785714285708], [77.0, 28.733333333333324], [78.0, 29.196428571428587], [79.0, 27.15668202764977], [80.0, 28.65671641791044], [81.0, 27.7799043062201], [82.0, 28.580952380952375], [83.0, 29.33004926108375], [84.0, 31.210784313725487], [85.0, 28.65686274509804], [86.0, 30.17621145374449], [87.0, 30.960591133004925], [88.0, 34.38172043010752], [89.0, 37.20895522388058], [90.0, 30.804761904761882], [91.0, 36.425531914893625], [92.0, 36.165803108808305], [93.0, 35.53551912568307], [94.0, 38.52061855670104], [95.0, 36.58333333333333], [96.0, 39.47513812154699], [97.0, 39.699421965317924], [98.0, 38.50000000000001], [99.0, 44.37714285714287], [100.0, 40.09756097560976], [101.0, 42.48186528497407], [102.0, 35.05714285714285], [103.0, 41.40291262135919], [104.0, 41.842105263157876], [105.0, 48.4421768707483], [106.0, 47.36702127659574], [107.0, 46.782051282051285], [108.0, 44.66463414634146], [109.0, 47.60326086956521], [110.0, 47.36423841059603], [111.0, 46.20465116279068], [112.0, 42.14583333333334], [113.0, 46.88372093023256], [114.0, 47.11848341232225], [115.0, 48.57303370786515], [116.0, 53.197452229299344], [117.0, 50.6896551724138], [118.0, 48.38823529411766], [119.0, 62.273885350318494], [120.0, 45.36129032258064], [121.0, 51.529100529100546], [122.0, 38.69333333333335], [123.0, 42.53303964757706], [124.0, 41.356807511737074], [125.0, 39.88888888888888], [126.0, 42.37556561085974], [127.0, 45.85714285714286], [128.0, 46.89029535864979], [129.0, 38.39], [130.0, 46.294642857142854], [131.0, 42.13392857142855], [132.0, 47.67136150234743], [133.0, 48.98048780487805], [134.0, 53.34343434343435], [135.0, 42.520467836257296], [136.0, 48.976076555023916], [137.0, 47.64372469635624], [138.0, 47.242105263157924], [139.0, 53.19021739130433], [140.0, 51.2556053811659], [141.0, 57.57868020304572], [142.0, 53.24999999999997], [143.0, 50.7621359223301], [144.0, 54.01895734597154], [145.0, 52.572254335260084], [146.0, 55.28205128205126], [147.0, 52.34482758620689], [148.0, 58.93922651933704], [149.0, 61.58173076923078], [150.0, 58.54335260115607], [151.0, 59.79710144927535], [152.0, 58.57589285714285], [153.0, 59.515527950310556], [154.0, 66.62499999999996], [155.0, 66.70186335403723], [156.0, 64.84745762711856], [157.0, 67.91219512195119], [158.0, 61.647058823529434], [159.0, 77.30808080808082], [160.0, 54.485549132947966], [161.0, 72.22857142857143], [162.0, 69.60765550239236], [163.0, 65.4494382022472], [164.0, 62.06857142857142], [165.0, 69.03508771929823], [166.0, 68.42325581395352], [167.0, 69.39361702127663], [168.0, 70.13913043478261], [169.0, 76.50724637681168], [170.0, 77.01315789473686], [171.0, 65.39639639639634], [172.0, 85.25874125874127], [173.0, 63.38235294117649], [174.0, 85.91145833333336], [175.0, 62.402985074626834], [176.0, 77.77419354838712], [177.0, 57.23015873015875], [178.0, 62.17748917748919], [179.0, 56.660098522167516], [180.0, 60.71544715447152], [181.0, 67.93013100436683], [182.0, 54.64432989690723], [183.0, 65.06249999999997], [184.0, 66.02272727272728], [185.0, 64.80172413793107], [186.0, 65.71356783919602], [187.0, 72.57647058823528], [188.0, 78.03829787234042], [189.0, 74.5654761904762], [190.0, 73.22905027932966], [191.0, 73.4787878787879], [192.0, 93.42187500000004], [193.0, 86.10967741935488], [194.0, 75.66494845360826], [195.0, 75.55704697986575], [196.0, 75.09722222222223], [197.0, 102.09389671361502], [198.0, 70.15463917525773], [199.0, 100.0309278350515], [200.0, 76.77354020177317], [1.0, 1.2903225806451615]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[123.72810809762854, 47.8938797665897]], "isOverall": false, "label": "Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 52140.88333333333, "minX": 1.73505312E12, "maxY": 3052732.9833333334, "series": [{"data": [[1.73505312E12, 471608.8], [1.73505318E12, 3052732.9833333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73505312E12, 52140.88333333333], [1.73505318E12, 327098.7]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73505318E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 4.530343754420716, "minX": 1.73505312E12, "maxY": 56.18553579039425, "series": [{"data": [[1.73505312E12, 4.58753541076487], [1.73505318E12, 55.68172207476756]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[1.73505312E12, 4.9360769339555945], [1.73505318E12, 56.18553579039425]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[1.73505312E12, 4.530343754420716], [1.73505318E12, 54.780181515927794]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73505318E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 3.021529745042501, "minX": 1.73505312E12, "maxY": 14.455550819892787, "series": [{"data": [[1.73505312E12, 3.021529745042501], [1.73505318E12, 14.023662782851234]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[1.73505312E12, 3.4157827747136102], [1.73505318E12, 14.455550819892787]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[1.73505312E12, 3.081623992078083], [1.73505318E12, 13.70310464123639]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73505318E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1.199830292745011, "minX": 1.73505312E12, "maxY": 5.632529578478576, "series": [{"data": [[1.73505312E12, 1.2065155807365402], [1.73505318E12, 5.632529578478576]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[1.73505312E12, 1.199830292745011], [1.73505318E12, 5.506426792884533]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[1.73505312E12, 1.2863205545338792], [1.73505318E12, 5.510962843150453]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73505318E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73505312E12, "maxY": 108.0, "series": [{"data": [[1.73505312E12, 26.0], [1.73505318E12, 108.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73505312E12, 0.0], [1.73505318E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73505312E12, 12.0], [1.73505318E12, 56.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73505312E12, 20.0], [1.73505318E12, 81.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73505312E12, 5.0], [1.73505318E12, 26.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.73505312E12, 15.0], [1.73505318E12, 67.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73505318E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 858.0, "maxY": 154.0, "series": [{"data": [[858.0, 2.0], [1030.0, 14.0], [1903.0, 18.0], [1860.0, 18.0], [1961.0, 17.0], [2031.0, 18.0], [2071.0, 15.0], [2134.0, 18.0], [2173.0, 15.0], [2170.0, 28.0], [2152.0, 35.0], [2300.0, 29.0], [2291.0, 35.0], [2430.0, 37.0], [2369.0, 12.0], [2380.0, 23.0], [2323.0, 27.0], [2406.0, 18.0], [2314.0, 42.0], [2388.0, 25.0], [2354.0, 35.0], [2367.0, 37.0], [2368.0, 34.0], [2397.0, 36.0], [2539.0, 38.0], [2439.0, 22.0], [2499.0, 36.0], [2467.0, 37.0], [2508.0, 24.0], [2551.0, 38.0], [2545.0, 26.0], [2517.0, 41.0], [2531.0, 32.0], [2458.0, 35.0], [2647.0, 10.0], [2628.0, 22.0], [2599.0, 26.0], [2567.0, 28.0], [2587.0, 31.0], [2641.0, 35.0], [2798.0, 19.0], [2761.0, 19.0], [2775.0, 23.0], [2801.0, 13.5], [2780.0, 18.0], [2696.0, 27.0], [2809.0, 18.0], [2725.0, 29.5], [2863.0, 26.0], [2830.0, 31.0], [2960.0, 9.0], [2944.0, 24.0], [3041.0, 16.0], [2946.0, 26.0], [3100.0, 15.0], [3080.0, 13.0], [3454.0, 6.0], [3479.0, 7.0], [3935.0, 2.0], [3867.0, 4.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[858.0, 0.0], [1030.0, 154.0], [1903.0, 26.0], [1860.0, 29.0], [1961.0, 22.0], [2031.0, 30.0], [2071.0, 18.0], [2134.0, 30.0], [2173.0, 36.0], [2170.0, 58.0], [2152.0, 94.0], [2300.0, 51.0], [2291.0, 71.0], [2430.0, 82.0], [2369.0, 14.0], [2380.0, 50.0], [2323.0, 48.0], [2406.0, 119.0], [2314.0, 104.0], [2388.0, 55.0], [2354.0, 72.0], [2367.0, 65.0], [2368.0, 96.0], [2397.0, 99.0], [2539.0, 87.0], [2439.0, 43.0], [2499.0, 76.0], [2467.0, 74.0], [2508.0, 96.0], [2551.0, 78.0], [2545.0, 99.0], [2517.0, 86.0], [2531.0, 91.0], [2458.0, 84.5], [2647.0, 10.0], [2628.0, 39.0], [2599.0, 55.0], [2567.0, 61.0], [2587.0, 62.0], [2641.0, 88.0], [2798.0, 30.0], [2761.0, 32.0], [2775.0, 34.0], [2801.0, 57.0], [2780.0, 60.0], [2696.0, 56.0], [2809.0, 99.0], [2725.0, 85.0], [2863.0, 76.0], [2830.0, 86.0], [2960.0, 7.0], [2944.0, 48.0], [3041.0, 89.0], [2946.0, 84.0], [3100.0, 23.0], [3080.0, 27.0], [3454.0, 3.0], [3479.0, 4.0], [3935.0, 1.0], [3867.0, 1.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3935.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 858.0, "maxY": 42.0, "series": [{"data": [[858.0, 2.0], [1030.0, 14.0], [1903.0, 18.0], [1860.0, 18.0], [1961.0, 17.0], [2031.0, 18.0], [2071.0, 15.0], [2134.0, 18.0], [2173.0, 15.0], [2170.0, 28.0], [2152.0, 35.0], [2300.0, 29.0], [2291.0, 35.0], [2430.0, 37.0], [2369.0, 12.0], [2380.0, 23.0], [2323.0, 27.0], [2406.0, 18.0], [2314.0, 42.0], [2388.0, 25.0], [2354.0, 35.0], [2367.0, 37.0], [2368.0, 34.0], [2397.0, 36.0], [2539.0, 38.0], [2439.0, 22.0], [2499.0, 36.0], [2467.0, 37.0], [2508.0, 24.0], [2551.0, 38.0], [2545.0, 26.0], [2517.0, 41.0], [2531.0, 32.0], [2458.0, 35.0], [2647.0, 10.0], [2628.0, 22.0], [2599.0, 26.0], [2567.0, 28.0], [2587.0, 31.0], [2641.0, 35.0], [2798.0, 19.0], [2761.0, 19.0], [2775.0, 23.0], [2801.0, 13.5], [2780.0, 18.0], [2696.0, 27.0], [2809.0, 18.0], [2725.0, 29.5], [2863.0, 26.0], [2830.0, 31.0], [2960.0, 9.0], [2944.0, 24.0], [3041.0, 16.0], [2946.0, 26.0], [3100.0, 15.0], [3080.0, 13.0], [3454.0, 6.0], [3479.0, 7.0], [3935.0, 2.0], [3867.0, 4.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[858.0, 0.0], [1030.0, 0.0], [1903.0, 0.0], [1860.0, 0.0], [1961.0, 0.0], [2031.0, 0.0], [2071.0, 0.0], [2134.0, 0.0], [2173.0, 0.0], [2170.0, 0.0], [2152.0, 0.0], [2300.0, 0.0], [2291.0, 0.0], [2430.0, 0.0], [2369.0, 0.0], [2380.0, 0.0], [2323.0, 0.0], [2406.0, 0.0], [2314.0, 0.0], [2388.0, 0.0], [2354.0, 0.0], [2367.0, 0.0], [2368.0, 0.0], [2397.0, 0.0], [2539.0, 0.0], [2439.0, 0.0], [2499.0, 0.0], [2467.0, 0.0], [2508.0, 0.0], [2551.0, 0.0], [2545.0, 0.0], [2517.0, 0.0], [2531.0, 0.0], [2458.0, 0.0], [2647.0, 0.0], [2628.0, 0.0], [2599.0, 0.0], [2567.0, 0.0], [2587.0, 0.0], [2641.0, 0.0], [2798.0, 0.0], [2761.0, 0.0], [2775.0, 0.0], [2801.0, 0.0], [2780.0, 0.0], [2696.0, 0.0], [2809.0, 0.0], [2725.0, 0.0], [2863.0, 0.0], [2830.0, 0.0], [2960.0, 0.0], [2944.0, 0.0], [3041.0, 0.0], [2946.0, 0.0], [3100.0, 0.0], [3080.0, 0.0], [3454.0, 0.0], [3479.0, 0.0], [3935.0, 0.0], [3867.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3935.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 353.8333333333333, "minX": 1.73505312E12, "maxY": 2225.35, "series": [{"data": [[1.73505312E12, 353.8333333333333], [1.73505318E12, 2225.35]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73505318E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 7.966666666666667, "minX": 1.73505312E12, "maxY": 1107.7666666666667, "series": [{"data": [[1.73505312E12, 58.766666666666666], [1.73505318E12, 369.23333333333335]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.73505312E12, 59.083333333333336], [1.73505318E12, 370.8]], "isOverall": false, "label": "400", "isController": false}, {"data": [[1.73505312E12, 59.06666666666667], [1.73505318E12, 370.0833333333333]], "isOverall": false, "label": "401", "isController": false}, {"data": [[1.73505312E12, 22.4], [1.73505318E12, 7.966666666666667]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.73505312E12, 154.01666666666668], [1.73505318E12, 1107.7666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73505318E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.73505312E12, "maxY": 742.9833333333333, "series": [{"data": [[1.73505312E12, 0.016666666666666666]], "isOverall": false, "label": "Register-success", "isController": false}, {"data": [[1.73505312E12, 117.83333333333333], [1.73505318E12, 742.9833333333333]], "isOverall": false, "label": "Register-failure", "isController": false}, {"data": [[1.73505312E12, 117.66666666666667], [1.73505318E12, 740.9666666666667]], "isOverall": false, "label": "Delete-failure", "isController": false}, {"data": [[1.73505312E12, 59.06666666666667], [1.73505318E12, 372.6666666666667]], "isOverall": false, "label": "Login-failure", "isController": false}, {"data": [[1.73505312E12, 58.75], [1.73505318E12, 369.23333333333335]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73505318E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 58.766666666666666, "minX": 1.73505312E12, "maxY": 1856.6166666666666, "series": [{"data": [[1.73505312E12, 58.766666666666666], [1.73505318E12, 369.23333333333335]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.73505312E12, 294.56666666666666], [1.73505318E12, 1856.6166666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73505318E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

